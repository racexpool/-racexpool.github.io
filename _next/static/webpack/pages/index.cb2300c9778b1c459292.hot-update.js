webpackHotUpdate_N_E("pages/index",{

/***/ "./node_modules/prop-types/checkPropTypes.js":
/*!***************************************************!*\
  !*** ./node_modules/prop-types/checkPropTypes.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar printWarning = function() {};\n\nif (true) {\n  var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ \"./node_modules/prop-types/lib/ReactPropTypesSecret.js\");\n  var loggedTypeFailures = {};\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (true) {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (true) {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvY2hlY2tQcm9wVHlwZXMuanM/YTE1YyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWI7O0FBRUEsSUFBSSxJQUFxQztBQUN6Qyw2QkFBNkIsbUJBQU8sQ0FBQyx5RkFBNEI7QUFDakU7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsVUFBVTtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxNQUFNLElBQXFDO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0R0FBNEc7QUFDNUc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyREFBMkQ7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLElBQXFDO0FBQzNDO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2NoZWNrUHJvcFR5cGVzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBwcmludFdhcm5pbmcgPSBmdW5jdGlvbigpIHt9O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuICB2YXIgbG9nZ2VkVHlwZUZhaWx1cmVzID0ge307XG4gIHZhciBoYXMgPSBGdW5jdGlvbi5jYWxsLmJpbmQoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSk7XG5cbiAgcHJpbnRXYXJuaW5nID0gZnVuY3Rpb24odGV4dCkge1xuICAgIHZhciBtZXNzYWdlID0gJ1dhcm5pbmc6ICcgKyB0ZXh0O1xuICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAvLyAtLS0gV2VsY29tZSB0byBkZWJ1Z2dpbmcgUmVhY3QgLS0tXG4gICAgICAvLyBUaGlzIGVycm9yIHdhcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB0aGF0IHlvdSBjYW4gdXNlIHRoaXMgc3RhY2tcbiAgICAgIC8vIHRvIGZpbmQgdGhlIGNhbGxzaXRlIHRoYXQgY2F1c2VkIHRoaXMgd2FybmluZyB0byBmaXJlLlxuICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgIH0gY2F0Y2ggKHgpIHt9XG4gIH07XG59XG5cbi8qKlxuICogQXNzZXJ0IHRoYXQgdGhlIHZhbHVlcyBtYXRjaCB3aXRoIHRoZSB0eXBlIHNwZWNzLlxuICogRXJyb3IgbWVzc2FnZXMgYXJlIG1lbW9yaXplZCBhbmQgd2lsbCBvbmx5IGJlIHNob3duIG9uY2UuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IHR5cGVTcGVjcyBNYXAgb2YgbmFtZSB0byBhIFJlYWN0UHJvcFR5cGVcbiAqIEBwYXJhbSB7b2JqZWN0fSB2YWx1ZXMgUnVudGltZSB2YWx1ZXMgdGhhdCBuZWVkIHRvIGJlIHR5cGUtY2hlY2tlZFxuICogQHBhcmFtIHtzdHJpbmd9IGxvY2F0aW9uIGUuZy4gXCJwcm9wXCIsIFwiY29udGV4dFwiLCBcImNoaWxkIGNvbnRleHRcIlxuICogQHBhcmFtIHtzdHJpbmd9IGNvbXBvbmVudE5hbWUgTmFtZSBvZiB0aGUgY29tcG9uZW50IGZvciBlcnJvciBtZXNzYWdlcy5cbiAqIEBwYXJhbSB7P0Z1bmN0aW9ufSBnZXRTdGFjayBSZXR1cm5zIHRoZSBjb21wb25lbnQgc3RhY2suXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBjaGVja1Byb3BUeXBlcyh0eXBlU3BlY3MsIHZhbHVlcywgbG9jYXRpb24sIGNvbXBvbmVudE5hbWUsIGdldFN0YWNrKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgZm9yICh2YXIgdHlwZVNwZWNOYW1lIGluIHR5cGVTcGVjcykge1xuICAgICAgaWYgKGhhcyh0eXBlU3BlY3MsIHR5cGVTcGVjTmFtZSkpIHtcbiAgICAgICAgdmFyIGVycm9yO1xuICAgICAgICAvLyBQcm9wIHR5cGUgdmFsaWRhdGlvbiBtYXkgdGhyb3cuIEluIGNhc2UgdGhleSBkbywgd2UgZG9uJ3Qgd2FudCB0b1xuICAgICAgICAvLyBmYWlsIHRoZSByZW5kZXIgcGhhc2Ugd2hlcmUgaXQgZGlkbid0IGZhaWwgYmVmb3JlLiBTbyB3ZSBsb2cgaXQuXG4gICAgICAgIC8vIEFmdGVyIHRoZXNlIGhhdmUgYmVlbiBjbGVhbmVkIHVwLCB3ZSdsbCBsZXQgdGhlbSB0aHJvdy5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBUaGlzIGlzIGludGVudGlvbmFsbHkgYW4gaW52YXJpYW50IHRoYXQgZ2V0cyBjYXVnaHQuIEl0J3MgdGhlIHNhbWVcbiAgICAgICAgICAvLyBiZWhhdmlvciBhcyB3aXRob3V0IHRoaXMgc3RhdGVtZW50IGV4Y2VwdCB3aXRoIGEgYmV0dGVyIG1lc3NhZ2UuXG4gICAgICAgICAgaWYgKHR5cGVvZiB0eXBlU3BlY3NbdHlwZVNwZWNOYW1lXSAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgdmFyIGVyciA9IEVycm9yKFxuICAgICAgICAgICAgICAoY29tcG9uZW50TmFtZSB8fCAnUmVhY3QgY2xhc3MnKSArICc6ICcgKyBsb2NhdGlvbiArICcgdHlwZSBgJyArIHR5cGVTcGVjTmFtZSArICdgIGlzIGludmFsaWQ7ICcgK1xuICAgICAgICAgICAgICAnaXQgbXVzdCBiZSBhIGZ1bmN0aW9uLCB1c3VhbGx5IGZyb20gdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLCBidXQgcmVjZWl2ZWQgYCcgKyB0eXBlb2YgdHlwZVNwZWNzW3R5cGVTcGVjTmFtZV0gKyAnYC4nXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgICAgfVxuICAgICAgICAgIGVycm9yID0gdHlwZVNwZWNzW3R5cGVTcGVjTmFtZV0odmFsdWVzLCB0eXBlU3BlY05hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBudWxsLCBSZWFjdFByb3BUeXBlc1NlY3JldCk7XG4gICAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgICAgZXJyb3IgPSBleDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZXJyb3IgJiYgIShlcnJvciBpbnN0YW5jZW9mIEVycm9yKSkge1xuICAgICAgICAgIHByaW50V2FybmluZyhcbiAgICAgICAgICAgIChjb21wb25lbnROYW1lIHx8ICdSZWFjdCBjbGFzcycpICsgJzogdHlwZSBzcGVjaWZpY2F0aW9uIG9mICcgK1xuICAgICAgICAgICAgbG9jYXRpb24gKyAnIGAnICsgdHlwZVNwZWNOYW1lICsgJ2AgaXMgaW52YWxpZDsgdGhlIHR5cGUgY2hlY2tlciAnICtcbiAgICAgICAgICAgICdmdW5jdGlvbiBtdXN0IHJldHVybiBgbnVsbGAgb3IgYW4gYEVycm9yYCBidXQgcmV0dXJuZWQgYSAnICsgdHlwZW9mIGVycm9yICsgJy4gJyArXG4gICAgICAgICAgICAnWW91IG1heSBoYXZlIGZvcmdvdHRlbiB0byBwYXNzIGFuIGFyZ3VtZW50IHRvIHRoZSB0eXBlIGNoZWNrZXIgJyArXG4gICAgICAgICAgICAnY3JlYXRvciAoYXJyYXlPZiwgaW5zdGFuY2VPZiwgb2JqZWN0T2YsIG9uZU9mLCBvbmVPZlR5cGUsIGFuZCAnICtcbiAgICAgICAgICAgICdzaGFwZSBhbGwgcmVxdWlyZSBhbiBhcmd1bWVudCkuJ1xuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGVycm9yIGluc3RhbmNlb2YgRXJyb3IgJiYgIShlcnJvci5tZXNzYWdlIGluIGxvZ2dlZFR5cGVGYWlsdXJlcykpIHtcbiAgICAgICAgICAvLyBPbmx5IG1vbml0b3IgdGhpcyBmYWlsdXJlIG9uY2UgYmVjYXVzZSB0aGVyZSB0ZW5kcyB0byBiZSBhIGxvdCBvZiB0aGVcbiAgICAgICAgICAvLyBzYW1lIGVycm9yLlxuICAgICAgICAgIGxvZ2dlZFR5cGVGYWlsdXJlc1tlcnJvci5tZXNzYWdlXSA9IHRydWU7XG5cbiAgICAgICAgICB2YXIgc3RhY2sgPSBnZXRTdGFjayA/IGdldFN0YWNrKCkgOiAnJztcblxuICAgICAgICAgIHByaW50V2FybmluZyhcbiAgICAgICAgICAgICdGYWlsZWQgJyArIGxvY2F0aW9uICsgJyB0eXBlOiAnICsgZXJyb3IubWVzc2FnZSArIChzdGFjayAhPSBudWxsID8gc3RhY2sgOiAnJylcbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogUmVzZXRzIHdhcm5pbmcgY2FjaGUgd2hlbiB0ZXN0aW5nLlxuICpcbiAqIEBwcml2YXRlXG4gKi9cbmNoZWNrUHJvcFR5cGVzLnJlc2V0V2FybmluZ0NhY2hlID0gZnVuY3Rpb24oKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgbG9nZ2VkVHlwZUZhaWx1cmVzID0ge307XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjaGVja1Byb3BUeXBlcztcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/prop-types/checkPropTypes.js\n");

/***/ }),

/***/ "./node_modules/prop-types/factoryWithTypeCheckers.js":
/*!************************************************************!*\
  !*** ./node_modules/prop-types/factoryWithTypeCheckers.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactIs = __webpack_require__(/*! react-is */ \"./node_modules/react-is/index.js\");\nvar assign = __webpack_require__(/*! object-assign */ \"./node_modules/next/dist/build/polyfills/object-assign.js\");\n\nvar ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ \"./node_modules/prop-types/lib/ReactPropTypesSecret.js\");\nvar checkPropTypes = __webpack_require__(/*! ./checkPropTypes */ \"./node_modules/prop-types/checkPropTypes.js\");\n\nvar has = Function.call.bind(Object.prototype.hasOwnProperty);\nvar printWarning = function() {};\n\nif (true) {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (true) {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if ( true && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (true) {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n       true ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : undefined;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from\n      // props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/prop-types/factoryWithTypeCheckers.js\n");

/***/ }),

/***/ "./node_modules/prop-types/index.js":
/*!******************************************!*\
  !*** ./node_modules/prop-types/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (true) {\n  var ReactIs = __webpack_require__(/*! react-is */ \"./node_modules/react-is/index.js\");\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = __webpack_require__(/*! ./factoryWithTypeCheckers */ \"./node_modules/prop-types/factoryWithTypeCheckers.js\")(ReactIs.isElement, throwOnDirectAccess);\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanM/ZDdiYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSSxJQUFxQztBQUN6QyxnQkFBZ0IsbUJBQU8sQ0FBQyxrREFBVTs7QUFFbEM7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLG1CQUFPLENBQUMsdUZBQTJCO0FBQ3RELENBQUMsTUFBTSxFQUlOIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBSZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcblxuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBkZXZlbG9wbWVudCBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICB2YXIgdGhyb3dPbkRpcmVjdEFjY2VzcyA9IHRydWU7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFR5cGVDaGVja2VycycpKFJlYWN0SXMuaXNFbGVtZW50LCB0aHJvd09uRGlyZWN0QWNjZXNzKTtcbn0gZWxzZSB7XG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IHByb2R1Y3Rpb24gYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcycpKCk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/prop-types/index.js\n");

/***/ }),

/***/ "./node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!*************************************************************!*\
  !*** ./node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzPzU5YjAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVhOztBQUViOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9ICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RQcm9wVHlwZXNTZWNyZXQ7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/prop-types/lib/ReactPropTypesSecret.js\n");

/***/ }),

/***/ "./node_modules/react-async/dist-web/index.js":
/*!****************************************************!*\
  !*** ./node_modules/react-async/dist-web/index.js ***!
  \****************************************************/
/*! exports provided: default, ActionTypes, Async, FetchError, IfFulfilled, IfInitial, IfPending, IfRejected, IfSettled, StatusTypes, createInstance, dispatchMiddleware, globalScope, init, neverSettle, reducer, useAsync, useFetch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ActionTypes\", function() { return ActionTypes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Async\", function() { return Async$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FetchError\", function() { return FetchError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IfFulfilled\", function() { return IfFulfilled; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IfInitial\", function() { return IfInitial; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IfPending\", function() { return IfPending; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IfRejected\", function() { return IfRejected; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IfSettled\", function() { return IfSettled; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StatusTypes\", function() { return StatusTypes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createInstance\", function() { return createInstance; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dispatchMiddleware\", function() { return dispatchMiddleware; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"globalScope\", function() { return globalScope; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"init\", function() { return init; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"neverSettle\", function() { return neverSettle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"reducer\", function() { return reducer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useAsync\", function() { return useAsync$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useFetch\", function() { return useFetch; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\n/* istanbul ignore file */\n/**\n * Universal global scope object. In the browser this is `self`, in Node.js and React Native it's `global`.\n * This file is excluded from coverage reporting because these globals are environment-specific so we can't test them all.\n */\nconst globalScope = (() => {\n    if (typeof self === \"object\" && self.self === self)\n        return self;\n    if (typeof global === \"object\" && global.global === global)\n        return global;\n    if (typeof global === \"object\" && global.GLOBAL === global)\n        return global;\n    return {}; // fallback that relies on imported modules to be singletons\n})();\n/**\n * Globally available object used to connect the DevTools to all React Async instances.\n */\nglobalScope.__REACT_ASYNC__ = globalScope.__REACT_ASYNC__ || {};\nconst noop = () => { };\nclass MockAbortController {\n    constructor() {\n        this.abort = noop;\n        this.signal = {};\n    }\n}\n\nlet PropTypes;\ntry {\n    PropTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n}\ncatch (e) { }\nconst childrenFn = PropTypes && PropTypes.oneOfType([PropTypes.node, PropTypes.func]);\nconst stateObject = PropTypes &&\n    PropTypes.shape({\n        initialValue: PropTypes.any,\n        data: PropTypes.any,\n        error: PropTypes.instanceOf(Error),\n        value: PropTypes.any,\n        startedAt: PropTypes.instanceOf(Date),\n        finishedAt: PropTypes.instanceOf(Date),\n        status: PropTypes.oneOf([\"initial\", \"pending\", \"fulfilled\", \"rejected\"]),\n        isInitial: PropTypes.bool,\n        isPending: PropTypes.bool,\n        isLoading: PropTypes.bool,\n        isFulfilled: PropTypes.bool,\n        isResolved: PropTypes.bool,\n        isRejected: PropTypes.bool,\n        isSettled: PropTypes.bool,\n        counter: PropTypes.number,\n        promise: PropTypes.instanceOf(Promise),\n        run: PropTypes.func,\n        reload: PropTypes.func,\n        cancel: PropTypes.func,\n        setData: PropTypes.func,\n        setError: PropTypes.func,\n    });\nvar propTypes = PropTypes && {\n    Async: {\n        children: childrenFn,\n        promise: PropTypes.instanceOf(Promise),\n        promiseFn: PropTypes.func,\n        deferFn: PropTypes.func,\n        watch: PropTypes.any,\n        watchFn: PropTypes.func,\n        initialValue: PropTypes.any,\n        onResolve: PropTypes.func,\n        onReject: PropTypes.func,\n        reducer: PropTypes.func,\n        dispatcher: PropTypes.func,\n        debugLabel: PropTypes.string,\n        suspense: PropTypes.bool,\n    },\n    Initial: {\n        children: childrenFn,\n        state: stateObject.isRequired,\n        persist: PropTypes.bool,\n    },\n    Pending: {\n        children: childrenFn,\n        state: stateObject.isRequired,\n        initial: PropTypes.bool,\n    },\n    Fulfilled: {\n        children: childrenFn,\n        state: stateObject.isRequired,\n        persist: PropTypes.bool,\n    },\n    Rejected: {\n        children: childrenFn,\n        state: stateObject.isRequired,\n        persist: PropTypes.bool,\n    },\n    Settled: {\n        children: childrenFn,\n        state: stateObject.isRequired,\n        persist: PropTypes.bool,\n    },\n};\n\nconst renderFn = (children, ...args) => {\n    if (typeof children === \"function\") {\n        const render = children;\n        return render(...args);\n    }\n    return children;\n};\n/**\n * Renders only when no promise has started or completed yet.\n *\n * @prop {Function|Node} children Function (passing state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show until we have data, even while pending (loading) or when an error occurred\n */\nconst IfInitial = ({ children, persist, state = {}, }) => react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, state.isInitial || (persist && !state.data) ? renderFn(children, state) : null);\n/**\n * Renders only while pending (promise is loading).\n *\n * @prop {Function|Node} children Function (passing state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} initial Show only on initial load (data is undefined)\n */\nconst IfPending = ({ children, initial, state = {}, }) => react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, state.isPending && (!initial || !state.value) ? renderFn(children, state) : null);\n/**\n * Renders only when promise is resolved.\n *\n * @prop {Function|Node} children Function (passing data and state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show old data while pending (promise is loading)\n */\nconst IfFulfilled = ({ children, persist, state = {}, }) => (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, state.isFulfilled || (persist && state.data) ? renderFn(children, state.data, state) : null));\n/**\n * Renders only when promise is rejected.\n *\n * @prop {Function|Node} children Function (passing error and state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show old error while pending (promise is loading)\n */\nconst IfRejected = ({ children, persist, state = {}, }) => (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, state.isRejected || (persist && state.error) ? renderFn(children, state.error, state) : null));\n/**\n * Renders only when promise is fulfilled or rejected.\n *\n * @prop {Function|Node} children Function (passing state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show old data or error while pending (promise is loading)\n */\nconst IfSettled = ({ children, persist, state = {}, }) => react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, state.isSettled || (persist && state.value) ? renderFn(children, state) : null);\nif (propTypes) {\n    IfInitial.propTypes = propTypes.Initial;\n    IfPending.propTypes = propTypes.Pending;\n    IfFulfilled.propTypes = propTypes.Fulfilled;\n    IfRejected.propTypes = propTypes.Rejected;\n    IfSettled.propTypes = propTypes.Settled;\n}\n\nvar StatusTypes;\n(function (StatusTypes) {\n    StatusTypes[\"initial\"] = \"initial\";\n    StatusTypes[\"pending\"] = \"pending\";\n    StatusTypes[\"fulfilled\"] = \"fulfilled\";\n    StatusTypes[\"rejected\"] = \"rejected\";\n})(StatusTypes || (StatusTypes = {}));\nconst getInitialStatus = (value, promise) => {\n    if (value instanceof Error)\n        return StatusTypes.rejected;\n    if (value !== undefined)\n        return StatusTypes.fulfilled;\n    if (promise)\n        return StatusTypes.pending;\n    return StatusTypes.initial;\n};\nconst getIdleStatus = (value) => {\n    if (value instanceof Error)\n        return StatusTypes.rejected;\n    if (value !== undefined)\n        return StatusTypes.fulfilled;\n    return StatusTypes.initial;\n};\nconst getStatusProps = (status) => ({\n    status,\n    isInitial: status === StatusTypes.initial,\n    isPending: status === StatusTypes.pending,\n    isLoading: status === StatusTypes.pending,\n    isFulfilled: status === StatusTypes.fulfilled,\n    isResolved: status === StatusTypes.fulfilled,\n    isRejected: status === StatusTypes.rejected,\n    isSettled: status === StatusTypes.fulfilled || status === StatusTypes.rejected,\n});\n\n// This exists to make sure we don't hold any references to user-provided functions\n// The way NeverSettle extends from Promise is complicated, but can't be done differently because Babel doesn't support\n// extending built-in classes. See https://babeljs.io/docs/en/caveats/#classes\nconst NeverSettle = function () { };\n/* istanbul ignore next */\nif (Object.setPrototypeOf) {\n    Object.setPrototypeOf(NeverSettle, Promise);\n}\nelse {\n    NeverSettle.__proto__ = Promise;\n}\nNeverSettle.prototype = Object.assign(Object.create(Promise.prototype), {\n    finally() {\n        return this;\n    },\n    catch() {\n        return this;\n    },\n    then() {\n        return this;\n    },\n});\nconst neverSettle = new NeverSettle();\nvar ActionTypes;\n(function (ActionTypes) {\n    ActionTypes[\"start\"] = \"start\";\n    ActionTypes[\"cancel\"] = \"cancel\";\n    ActionTypes[\"fulfill\"] = \"fulfill\";\n    ActionTypes[\"reject\"] = \"reject\";\n})(ActionTypes || (ActionTypes = {}));\nconst init = ({ initialValue, promise, promiseFn, }) => ({\n    initialValue,\n    data: initialValue instanceof Error ? undefined : initialValue,\n    error: initialValue instanceof Error ? initialValue : undefined,\n    value: initialValue,\n    startedAt: promise || promiseFn ? new Date() : undefined,\n    finishedAt: initialValue ? new Date() : undefined,\n    ...getStatusProps(getInitialStatus(initialValue, promise || promiseFn)),\n    counter: 0,\n    promise: neverSettle,\n});\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case ActionTypes.start:\n            return {\n                ...state,\n                startedAt: new Date(),\n                finishedAt: undefined,\n                ...getStatusProps(StatusTypes.pending),\n                counter: action.meta.counter,\n                promise: action.meta.promise,\n            };\n        case ActionTypes.cancel:\n            return {\n                ...state,\n                startedAt: undefined,\n                finishedAt: undefined,\n                ...getStatusProps(getIdleStatus(state.error || state.data)),\n                counter: action.meta.counter,\n                promise: action.meta.promise,\n            };\n        case ActionTypes.fulfill:\n            return {\n                ...state,\n                data: action.payload,\n                value: action.payload,\n                error: undefined,\n                finishedAt: new Date(),\n                ...getStatusProps(StatusTypes.fulfilled),\n                promise: action.meta.promise,\n            };\n        case ActionTypes.reject:\n            return {\n                ...state,\n                error: action.payload,\n                value: action.payload,\n                finishedAt: new Date(),\n                ...getStatusProps(StatusTypes.rejected),\n                promise: action.meta.promise,\n            };\n        default:\n            return state;\n    }\n};\nconst dispatchMiddleware = (dispatch) => (action, ...args) => {\n    dispatch(action, ...args);\n    if (action.type === ActionTypes.start && typeof action.payload === \"function\") {\n        action.payload();\n    }\n};\n\nclass Async extends react__WEBPACK_IMPORTED_MODULE_0___default.a.Component {\n}\n/**\n * createInstance allows you to create instances of Async that are bound to a specific promise.\n * A unique instance also uses its own React context for better nesting capability.\n */\nfunction createInstance(defaultOptions = {}, displayName = \"Async\") {\n    const { Consumer: UnguardedConsumer, Provider } = react__WEBPACK_IMPORTED_MODULE_0___default.a.createContext(undefined);\n    function Consumer({ children }) {\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(UnguardedConsumer, null, value => {\n            if (!value) {\n                throw new Error(\"this component should only be used within an associated <Async> component!\");\n            }\n            return children(value);\n        }));\n    }\n    class Async extends react__WEBPACK_IMPORTED_MODULE_0___default.a.Component {\n        constructor(props) {\n            super(props);\n            this.mounted = false;\n            this.counter = 0;\n            this.args = [];\n            this.promise = neverSettle;\n            this.abortController = new MockAbortController();\n            this.start = this.start.bind(this);\n            this.load = this.load.bind(this);\n            this.run = this.run.bind(this);\n            this.cancel = this.cancel.bind(this);\n            this.onResolve = this.onResolve.bind(this);\n            this.onReject = this.onReject.bind(this);\n            this.setData = this.setData.bind(this);\n            this.setError = this.setError.bind(this);\n            const promise = props.promise;\n            const promiseFn = props.promiseFn || defaultOptions.promiseFn;\n            const initialValue = props.initialValue || defaultOptions.initialValue;\n            this.state = {\n                ...init({ initialValue, promise, promiseFn }),\n                cancel: this.cancel,\n                run: this.run,\n                reload: () => {\n                    this.load();\n                    this.run(...this.args);\n                },\n                setData: this.setData,\n                setError: this.setError,\n            };\n            this.debugLabel = props.debugLabel || defaultOptions.debugLabel;\n            const { devToolsDispatcher } = globalScope.__REACT_ASYNC__;\n            const _reducer = props.reducer || defaultOptions.reducer;\n            const _dispatcher = props.dispatcher || defaultOptions.dispatcher || devToolsDispatcher;\n            const reducer$1 = _reducer\n                ? (state, action) => _reducer(state, action, reducer)\n                : reducer;\n            const dispatch = dispatchMiddleware((action, callback) => {\n                this.setState(state => reducer$1(state, action), callback);\n            });\n            this.dispatch = _dispatcher ? action => _dispatcher(action, dispatch, props) : dispatch;\n        }\n        componentDidMount() {\n            this.mounted = true;\n            if (this.props.promise || !this.state.initialValue) {\n                this.load();\n            }\n        }\n        componentDidUpdate(prevProps) {\n            const { watch, watchFn = defaultOptions.watchFn, promise, promiseFn } = this.props;\n            if (watch !== prevProps.watch) {\n                if (this.counter)\n                    this.cancel();\n                return this.load();\n            }\n            if (watchFn &&\n                watchFn({ ...defaultOptions, ...this.props }, { ...defaultOptions, ...prevProps })) {\n                if (this.counter)\n                    this.cancel();\n                return this.load();\n            }\n            if (promise !== prevProps.promise) {\n                if (this.counter)\n                    this.cancel();\n                if (promise)\n                    return this.load();\n            }\n            if (promiseFn !== prevProps.promiseFn) {\n                if (this.counter)\n                    this.cancel();\n                if (promiseFn)\n                    return this.load();\n            }\n        }\n        componentWillUnmount() {\n            this.cancel();\n            this.mounted = false;\n        }\n        getMeta(meta) {\n            return {\n                counter: this.counter,\n                promise: this.promise,\n                debugLabel: this.debugLabel,\n                ...meta,\n            };\n        }\n        start(promiseFn) {\n            if (\"AbortController\" in globalScope) {\n                this.abortController.abort();\n                this.abortController = new globalScope.AbortController();\n            }\n            this.counter++;\n            return (this.promise = new Promise((resolve, reject) => {\n                if (!this.mounted)\n                    return;\n                const executor = () => promiseFn().then(resolve, reject);\n                this.dispatch({ type: ActionTypes.start, payload: executor, meta: this.getMeta() });\n            }));\n        }\n        load() {\n            const promise = this.props.promise;\n            const promiseFn = this.props.promiseFn || defaultOptions.promiseFn;\n            if (promise) {\n                this.start(() => promise)\n                    .then(this.onResolve(this.counter))\n                    .catch(this.onReject(this.counter));\n            }\n            else if (promiseFn) {\n                const props = { ...defaultOptions, ...this.props };\n                this.start(() => promiseFn(props, this.abortController))\n                    .then(this.onResolve(this.counter))\n                    .catch(this.onReject(this.counter));\n            }\n        }\n        run(...args) {\n            const deferFn = this.props.deferFn || defaultOptions.deferFn;\n            if (deferFn) {\n                this.args = args;\n                const props = { ...defaultOptions, ...this.props };\n                return this.start(() => deferFn(args, props, this.abortController)).then(this.onResolve(this.counter), this.onReject(this.counter));\n            }\n        }\n        cancel() {\n            const onCancel = this.props.onCancel || defaultOptions.onCancel;\n            onCancel && onCancel();\n            this.counter++;\n            this.abortController.abort();\n            this.mounted && this.dispatch({ type: ActionTypes.cancel, meta: this.getMeta() });\n        }\n        onResolve(counter) {\n            return (data) => {\n                if (this.counter === counter) {\n                    const onResolve = this.props.onResolve || defaultOptions.onResolve;\n                    this.setData(data, () => onResolve && onResolve(data));\n                }\n                return data;\n            };\n        }\n        onReject(counter) {\n            return (error) => {\n                if (this.counter === counter) {\n                    const onReject = this.props.onReject || defaultOptions.onReject;\n                    this.setError(error, () => onReject && onReject(error));\n                }\n                return error;\n            };\n        }\n        setData(data, callback) {\n            this.mounted &&\n                this.dispatch({ type: ActionTypes.fulfill, payload: data, meta: this.getMeta() }, callback);\n            return data;\n        }\n        setError(error, callback) {\n            this.mounted &&\n                this.dispatch({ type: ActionTypes.reject, payload: error, error: true, meta: this.getMeta() }, callback);\n            return error;\n        }\n        render() {\n            const { children, suspense } = this.props;\n            if (suspense && this.state.isPending && this.promise !== neverSettle) {\n                // Rely on Suspense to handle the loading state\n                throw this.promise;\n            }\n            if (typeof children === \"function\") {\n                const render = children;\n                return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Provider, { value: this.state }, render(this.state));\n            }\n            if (children !== undefined && children !== null) {\n                return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Provider, { value: this.state }, children);\n            }\n            return null;\n        }\n    }\n    if (propTypes)\n        Async.propTypes = propTypes.Async;\n    const AsyncInitial = props => (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Consumer, null, st => react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(IfInitial, Object.assign({}, props, { state: st }))));\n    const AsyncPending = props => (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Consumer, null, st => react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(IfPending, Object.assign({}, props, { state: st }))));\n    const AsyncFulfilled = props => (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Consumer, null, st => react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(IfFulfilled, Object.assign({}, props, { state: st }))));\n    const AsyncRejected = props => (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Consumer, null, st => react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(IfRejected, Object.assign({}, props, { state: st }))));\n    const AsyncSettled = props => (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Consumer, null, st => react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(IfSettled, Object.assign({}, props, { state: st }))));\n    AsyncInitial.displayName = `${displayName}.Initial`;\n    AsyncPending.displayName = `${displayName}.Pending`;\n    AsyncFulfilled.displayName = `${displayName}.Fulfilled`;\n    AsyncRejected.displayName = `${displayName}.Rejected`;\n    AsyncSettled.displayName = `${displayName}.Settled`;\n    return Object.assign(Async, {\n        displayName: displayName,\n        Initial: AsyncInitial,\n        Pending: AsyncPending,\n        Loading: AsyncPending,\n        Fulfilled: AsyncFulfilled,\n        Resolved: AsyncFulfilled,\n        Rejected: AsyncRejected,\n        Settled: AsyncSettled,\n    });\n}\nvar Async$1 = createInstance();\n\nfunction useAsync(arg1, arg2) {\n    const options = typeof arg1 === \"function\"\n        ? {\n            ...arg2,\n            promiseFn: arg1,\n        }\n        : arg1;\n    const counter = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useRef\"])(0);\n    const isMounted = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useRef\"])(true);\n    const lastArgs = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useRef\"])(undefined);\n    const lastOptions = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useRef\"])(options);\n    const lastPromise = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useRef\"])(neverSettle);\n    const abortController = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useRef\"])(new MockAbortController());\n    const { devToolsDispatcher } = globalScope.__REACT_ASYNC__;\n    const { reducer: reducer$1, dispatcher = devToolsDispatcher } = options;\n    const [state, _dispatch] = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useReducer\"])(reducer$1 ? (state, action) => reducer$1(state, action, reducer) : reducer, options, init);\n    const dispatch = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"])(dispatcher\n        ? action => dispatcher(action, dispatchMiddleware(_dispatch), lastOptions.current)\n        : dispatchMiddleware(_dispatch), [dispatcher]);\n    const { debugLabel } = options;\n    const getMeta = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"])((meta) => ({\n        counter: counter.current,\n        promise: lastPromise.current,\n        debugLabel,\n        ...meta,\n    }), [debugLabel]);\n    const setData = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"])((data, callback = noop) => {\n        if (isMounted.current) {\n            dispatch({\n                type: ActionTypes.fulfill,\n                payload: data,\n                meta: getMeta(),\n            });\n            callback();\n        }\n        return data;\n    }, [dispatch, getMeta]);\n    const setError = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"])((error, callback = noop) => {\n        if (isMounted.current) {\n            dispatch({\n                type: ActionTypes.reject,\n                payload: error,\n                error: true,\n                meta: getMeta(),\n            });\n            callback();\n        }\n        return error;\n    }, [dispatch, getMeta]);\n    const { onResolve, onReject } = options;\n    const handleResolve = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"])(count => (data) => count === counter.current && setData(data, () => onResolve && onResolve(data)), [setData, onResolve]);\n    const handleReject = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"])(count => (err) => count === counter.current && setError(err, () => onReject && onReject(err)), [setError, onReject]);\n    const start = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"])(promiseFn => {\n        if (\"AbortController\" in globalScope) {\n            abortController.current.abort();\n            abortController.current = new globalScope.AbortController();\n        }\n        counter.current++;\n        return (lastPromise.current = new Promise((resolve, reject) => {\n            if (!isMounted.current)\n                return;\n            const executor = () => promiseFn().then(resolve, reject);\n            dispatch({\n                type: ActionTypes.start,\n                payload: executor,\n                meta: getMeta(),\n            });\n        }));\n    }, [dispatch, getMeta]);\n    const { promise, promiseFn, initialValue } = options;\n    const load = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"])(() => {\n        const isPreInitialized = initialValue && counter.current === 0;\n        if (promise) {\n            start(() => promise)\n                .then(handleResolve(counter.current))\n                .catch(handleReject(counter.current));\n        }\n        else if (promiseFn && !isPreInitialized) {\n            start(() => promiseFn(lastOptions.current, abortController.current))\n                .then(handleResolve(counter.current))\n                .catch(handleReject(counter.current));\n        }\n    }, [start, promise, promiseFn, initialValue, handleResolve, handleReject]);\n    const { deferFn } = options;\n    const run = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"])((...args) => {\n        if (deferFn) {\n            lastArgs.current = args;\n            start(() => deferFn(args, lastOptions.current, abortController.current))\n                .then(handleResolve(counter.current))\n                .catch(handleReject(counter.current));\n        }\n    }, [start, deferFn, handleResolve, handleReject]);\n    const reload = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"])(() => {\n        lastArgs.current ? run(...lastArgs.current) : load();\n    }, [run, load]);\n    const { onCancel } = options;\n    const cancel = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"])(() => {\n        onCancel && onCancel();\n        counter.current++;\n        abortController.current.abort();\n        isMounted.current &&\n            dispatch({\n                type: ActionTypes.cancel,\n                meta: getMeta(),\n            });\n    }, [onCancel, dispatch, getMeta]);\n    /* These effects should only be triggered on changes to specific props */\n    /* eslint-disable react-hooks/exhaustive-deps */\n    const { watch, watchFn } = options;\n    Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(() => {\n        if (watchFn && lastOptions.current && watchFn(options, lastOptions.current)) {\n            lastOptions.current = options;\n            load();\n        }\n    });\n    Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(() => {\n        lastOptions.current = options;\n    }, [options]);\n    Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(() => {\n        if (counter.current)\n            cancel();\n        if (promise || promiseFn)\n            load();\n    }, [promise, promiseFn, watch]);\n    Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(() => () => {\n        isMounted.current = false;\n    }, []);\n    Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(() => () => cancel(), []);\n    /* eslint-enable react-hooks/exhaustive-deps */\n    Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useDebugValue\"])(state, ({ status }) => `[${counter.current}] ${status}`);\n    if (options.suspense && state.isPending && lastPromise.current !== neverSettle) {\n        // Rely on Suspense to handle the loading state\n        throw lastPromise.current;\n    }\n    return Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useMemo\"])(() => ({\n        ...state,\n        run,\n        reload,\n        cancel,\n        setData,\n        setError,\n    }), [state, run, reload, cancel, setData, setError]);\n}\nclass FetchError extends Error {\n    constructor(response) {\n        super(`${response.status} ${response.statusText}`);\n        this.response = response;\n        /* istanbul ignore next */\n        if (Object.setPrototypeOf) {\n            // Not available in IE 10, but can be polyfilled\n            Object.setPrototypeOf(this, FetchError.prototype);\n        }\n    }\n}\nconst parseResponse = (accept, json) => (res) => {\n    if (!res.ok)\n        return Promise.reject(new FetchError(res));\n    if (typeof json === \"boolean\")\n        return json ? res.json() : res;\n    return accept === \"application/json\" ? res.json() : res;\n};\nfunction isEvent(e) {\n    return typeof e === \"object\" && \"preventDefault\" in e;\n}\n/**\n *\n * @param {RequestInfo} resource\n * @param {RequestInit} init\n * @param {FetchOptions} options\n * @returns {AsyncState<T, FetchRun<T>>}\n */\nfunction useAsyncFetch(resource, init, { defer, json, ...options } = {}) {\n    const method = resource.method || (init && init.method);\n    const headers = resource.headers || (init && init.headers) || {};\n    const accept = headers[\"Accept\"] || headers[\"accept\"] || (headers.get && headers.get(\"accept\"));\n    const doFetch = (input, init) => globalScope.fetch(input, init).then(parseResponse(accept, json));\n    const isDefer = typeof defer === \"boolean\" ? defer : [\"POST\", \"PUT\", \"PATCH\", \"DELETE\"].indexOf(method) !== -1;\n    const fn = isDefer ? \"deferFn\" : \"promiseFn\";\n    const identity = JSON.stringify({\n        resource,\n        init,\n        isDefer,\n    });\n    const promiseFn = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"])((_, { signal }) => {\n        return doFetch(resource, { signal, ...init });\n    }, [identity] // eslint-disable-line react-hooks/exhaustive-deps\n    );\n    const deferFn = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useCallback\"])(function ([override], _, { signal }) {\n        if (!override || isEvent(override)) {\n            return doFetch(resource, { signal, ...init });\n        }\n        if (typeof override === \"function\") {\n            const { resource: runResource, ...runInit } = override({ resource, signal, ...init });\n            return doFetch(runResource || resource, { signal, ...runInit });\n        }\n        const { resource: runResource, ...runInit } = override;\n        return doFetch(runResource || resource, { signal, ...init, ...runInit });\n    }, [identity] // eslint-disable-line react-hooks/exhaustive-deps\n    );\n    const state = useAsync({\n        ...options,\n        [fn]: isDefer ? deferFn : promiseFn,\n    });\n    Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useDebugValue\"])(state, ({ counter, status }) => `[${counter}] ${status}`);\n    return state;\n}\nconst unsupported = () => {\n    throw new Error(\"useAsync requires React v16.8 or up. Upgrade your React version or use the <Async> component instead.\");\n};\nvar useAsync$1 = react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"] ? useAsync : unsupported;\nconst useFetch = react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"] ? useAsyncFetch : unsupported;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Async$1);\n\n//# sourceMappingURL=index.js.map\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../next/dist/compiled/webpack/global.js */ \"./node_modules/next/dist/compiled/webpack/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-async/dist-web/index.js\n");

/***/ }),

/***/ "./pages/index.tsx":
/*!*************************!*\
  !*** ./pages/index.tsx ***!
  \*************************/
/*! exports provided: __N_SSG, default, getPoolData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__N_SSG\", function() { return __N_SSG; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPoolData\", function() { return getPoolData; });\n/* harmony import */ var _Users_francisluz_Documents_Projects_racex_cardano_racexpool_github_io_src_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _Users_francisluz_Documents_Projects_racex_cardano_racexpool_github_io_src_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Users_francisluz_Documents_Projects_racex_cardano_racexpool_github_io_src_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Users_francisluz_Documents_Projects_racex_cardano_racexpool_github_io_src_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _components_container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/container */ \"./components/container.tsx\");\n/* harmony import */ var _components_more_stories__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/more-stories */ \"./components/more-stories.tsx\");\n/* harmony import */ var _components_hero_post__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/hero-post */ \"./components/hero-post.tsx\");\n/* harmony import */ var _components_intro__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/intro */ \"./components/intro.tsx\");\n/* harmony import */ var _components_stake__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../components/stake */ \"./components/stake.tsx\");\n/* harmony import */ var _components_layout__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../components/layout */ \"./components/layout.tsx\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/head */ \"./node_modules/next/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var react_async__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! react-async */ \"./node_modules/react-async/dist-web/index.js\");\n\n\n\n\n\nvar _jsxFileName = \"/Users/francisluz/Documents/Projects/racex-cardano/racexpool.github.io/src/pages/index.tsx\",\n    _this = undefined,\n    _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\nvar Index = function Index(_ref) {\n  _s();\n\n  var allPosts = _ref.allPosts;\n  var heroPost = allPosts.hero;\n  var morePosts = allPosts.stories;\n\n  var _useAsync = Object(react_async__WEBPACK_IMPORTED_MODULE_10__[\"useAsync\"])({\n    promiseFn: getPoolData\n  }),\n      data = _useAsync.data,\n      error = _useAsync.error,\n      isLoading = _useAsync.isLoading;\n\n  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__[\"jsxDEV\"])(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__[\"Fragment\"], {\n    children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__[\"jsxDEV\"])(_components_layout__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n      children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__[\"jsxDEV\"])(next_head__WEBPACK_IMPORTED_MODULE_9___default.a, {\n        children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__[\"jsxDEV\"])(\"title\", {\n          children: \"RaceX - Cardano ADA Stake Pool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__[\"jsxDEV\"])(_components_container__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__[\"jsxDEV\"])(_components_intro__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__[\"jsxDEV\"])(_components_stake__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__[\"jsxDEV\"])(\"section\", {\n          children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__[\"jsxDEV\"])(\"p\", {\n            children: !poolData.fallback ? /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__[\"jsxDEV\"])(\"span\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, _this) : poolData.data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, _this), heroPost && /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__[\"jsxDEV\"])(_components_hero_post__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n          title: heroPost.title,\n          coverImage: heroPost.coverImage,\n          date: heroPost.date,\n          author: heroPost.author,\n          slug: heroPost.slug,\n          excerpt: heroPost.excerpt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, _this), morePosts.length > 0 && /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__[\"jsxDEV\"])(_components_more_stories__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n          posts: morePosts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 36\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(Index, \"xdv6mW+FJn/9l/oYAM4jNjrm7OY=\", false, function () {\n  return [react_async__WEBPACK_IMPORTED_MODULE_10__[\"useAsync\"]];\n});\n\n_c = Index;\nvar __N_SSG = true;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Index);\nfunction getPoolData() {\n  return _getPoolData.apply(this, arguments);\n}\n\nfunction _getPoolData() {\n  _getPoolData = Object(_Users_francisluz_Documents_Projects_racex_cardano_racexpool_github_io_src_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_Users_francisluz_Documents_Projects_racex_cardano_racexpool_github_io_src_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {\n    var url, response;\n    return _Users_francisluz_Documents_Projects_racex_cardano_racexpool_github_io_src_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = \"https://js.adapools.org/pools/dfacb4313176b700e8ce0ba88732a5d7583746ccfaf582bd12095fde/summary.json\";\n            _context.next = 3;\n            return fetch(\"https://jsonplaceholder.typicode.com/users\").then(function (res) {\n              return res.ok ? res : Promise.reject(res);\n            }).then(function (res) {\n              return res.json();\n            });\n\n          case 3:\n            response = _context.sent;\n            return _context.abrupt(\"return\", {\n              response: response\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getPoolData.apply(this, arguments);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/next/dist/compiled/webpack/harmony-module.js */ \"./node_modules/next/dist/compiled/webpack/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcGFnZXMvaW5kZXgudHN4P2RiNzYiXSwibmFtZXMiOlsiSW5kZXgiLCJhbGxQb3N0cyIsImhlcm9Qb3N0IiwiaGVybyIsIm1vcmVQb3N0cyIsInN0b3JpZXMiLCJ1c2VBc3luYyIsInByb21pc2VGbiIsImdldFBvb2xEYXRhIiwiZGF0YSIsImVycm9yIiwiaXNMb2FkaW5nIiwicG9vbERhdGEiLCJmYWxsYmFjayIsInRpdGxlIiwiY292ZXJJbWFnZSIsImRhdGUiLCJhdXRob3IiLCJzbHVnIiwiZXhjZXJwdCIsImxlbmd0aCIsInVybCIsImZldGNoIiwidGhlbiIsInJlcyIsIm9rIiwiUHJvbWlzZSIsInJlamVjdCIsImpzb24iLCJyZXNwb25zZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUdBOztBQWFBLElBQU1BLEtBQUssR0FBRyxTQUFSQSxLQUFRLE9BQXlCO0FBQUE7O0FBQUEsTUFBdEJDLFFBQXNCLFFBQXRCQSxRQUFzQjtBQUNyQyxNQUFNQyxRQUFRLEdBQUdELFFBQVEsQ0FBQ0UsSUFBMUI7QUFDQSxNQUFNQyxTQUFTLEdBQUdILFFBQVEsQ0FBQ0ksT0FBM0I7O0FBRnFDLGtCQUdGQyw2REFBUSxDQUFDO0FBQUVDLGFBQVMsRUFBRUM7QUFBYixHQUFELENBSE47QUFBQSxNQUc3QkMsSUFINkIsYUFHN0JBLElBSDZCO0FBQUEsTUFHdkJDLEtBSHVCLGFBR3ZCQSxLQUh1QjtBQUFBLE1BR2hCQyxTQUhnQixhQUdoQkEsU0FIZ0I7O0FBS3JDLHNCQUNFO0FBQUEsMkJBQ0UscUVBQUMsMERBQUQ7QUFBQSw4QkFDRSxxRUFBQyxnREFBRDtBQUFBLCtCQUNFO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBREY7QUFBQTtBQUFBO0FBQUE7QUFBQSxlQURGLGVBSUUscUVBQUMsNkRBQUQ7QUFBQSxnQ0FDRSxxRUFBQyx5REFBRDtBQUFBO0FBQUE7QUFBQTtBQUFBLGlCQURGLGVBRUUscUVBQUMseURBQUQ7QUFBQTtBQUFBO0FBQUE7QUFBQSxpQkFGRixlQUdFO0FBQUEsaUNBQ0U7QUFBQSxzQkFDSSxDQUFFQyxRQUFRLENBQUNDLFFBQVgsZ0JBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEscUJBREEsR0FHQUQsUUFBUSxDQUFDSDtBQUpiO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFERjtBQUFBO0FBQUE7QUFBQTtBQUFBLGlCQUhGLEVBWUdQLFFBQVEsaUJBQ1AscUVBQUMsNkRBQUQ7QUFDRSxlQUFLLEVBQUVBLFFBQVEsQ0FBQ1ksS0FEbEI7QUFFRSxvQkFBVSxFQUFFWixRQUFRLENBQUNhLFVBRnZCO0FBR0UsY0FBSSxFQUFFYixRQUFRLENBQUNjLElBSGpCO0FBSUUsZ0JBQU0sRUFBRWQsUUFBUSxDQUFDZSxNQUpuQjtBQUtFLGNBQUksRUFBRWYsUUFBUSxDQUFDZ0IsSUFMakI7QUFNRSxpQkFBTyxFQUFFaEIsUUFBUSxDQUFDaUI7QUFOcEI7QUFBQTtBQUFBO0FBQUE7QUFBQSxpQkFiSixFQXNCR2YsU0FBUyxDQUFDZ0IsTUFBVixHQUFtQixDQUFuQixpQkFBd0IscUVBQUMsZ0VBQUQ7QUFBYSxlQUFLLEVBQUVoQjtBQUFwQjtBQUFBO0FBQUE7QUFBQTtBQUFBLGlCQXRCM0I7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGVBSkY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBREYsbUJBREY7QUFpQ0QsQ0F0Q0Q7O0dBQU1KLEs7VUFHK0JNLHFEOzs7S0FIL0JOLEs7O0FBd0NTQSxvRUFBZjtBQWtCTyxTQUFlUSxXQUF0QjtBQUFBO0FBQUE7OztnWEFBTztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQ2EsZUFERCxHQUNPLHFHQURQO0FBQUE7QUFBQSxtQkFFa0JDLEtBQUssQ0FBQyw0Q0FBRCxDQUFMLENBQ3BCQyxJQURvQixDQUNmLFVBQUFDLEdBQUc7QUFBQSxxQkFBS0EsR0FBRyxDQUFDQyxFQUFKLEdBQVNELEdBQVQsR0FBZUUsT0FBTyxDQUFDQyxNQUFSLENBQWVILEdBQWYsQ0FBcEI7QUFBQSxhQURZLEVBRXBCRCxJQUZvQixDQUVmLFVBQUFDLEdBQUc7QUFBQSxxQkFBSUEsR0FBRyxDQUFDSSxJQUFKLEVBQUo7QUFBQSxhQUZZLENBRmxCOztBQUFBO0FBRUNDLG9CQUZEO0FBQUEsNkNBTUU7QUFDTEEsc0JBQVEsRUFBUkE7QUFESyxhQU5GOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEciLCJmaWxlIjoiLi9wYWdlcy9pbmRleC50c3guanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ29udGFpbmVyIGZyb20gJy4uL2NvbXBvbmVudHMvY29udGFpbmVyJ1xuaW1wb3J0IE1vcmVTdG9yaWVzIGZyb20gJy4uL2NvbXBvbmVudHMvbW9yZS1zdG9yaWVzJ1xuaW1wb3J0IEhlcm9Qb3N0IGZyb20gJy4uL2NvbXBvbmVudHMvaGVyby1wb3N0J1xuaW1wb3J0IEludHJvIGZyb20gJy4uL2NvbXBvbmVudHMvaW50cm8nXG5pbXBvcnQgU3Rha2UgZnJvbSAnLi4vY29tcG9uZW50cy9zdGFrZSdcbmltcG9ydCBMYXlvdXQgZnJvbSAnLi4vY29tcG9uZW50cy9sYXlvdXQnXG5pbXBvcnQgeyBnZXRQb3N0cyB9IGZyb20gJy4uL2xpYi9hcGknXG5pbXBvcnQgSGVhZCBmcm9tICduZXh0L2hlYWQnXG5pbXBvcnQgeyBDTVNfTkFNRSB9IGZyb20gJy4uL2xpYi9jb25zdGFudHMnXG5pbXBvcnQgUG9zdCBmcm9tICcuLi90eXBlcy9wb3N0J1xuaW1wb3J0IHsgdXNlQXN5bmMgfSBmcm9tICdyZWFjdC1hc3luYydcblxudHlwZSBQcm9wcyA9IHtcbiAgYWxsUG9zdHM6IHtcbiAgICBoZXJvOiBQb3N0XG4gICAgc3RvcmllczogUG9zdFtdXG4gIH1cbiAgcG9vbERhdGE6IHtcbiAgICBkYXRhOiBhbnlcbiAgICBmYWxsYmFjazogYm9vbGVhblxuICB9XG59XG5cbmNvbnN0IEluZGV4ID0gKHsgYWxsUG9zdHMgfTogUHJvcHMpID0+IHtcbiAgY29uc3QgaGVyb1Bvc3QgPSBhbGxQb3N0cy5oZXJvXG4gIGNvbnN0IG1vcmVQb3N0cyA9IGFsbFBvc3RzLnN0b3JpZXNcbiAgY29uc3QgeyBkYXRhLCBlcnJvciwgaXNMb2FkaW5nIH0gPSB1c2VBc3luYyh7IHByb21pc2VGbjogZ2V0UG9vbERhdGEgfSlcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8TGF5b3V0PlxuICAgICAgICA8SGVhZD5cbiAgICAgICAgICA8dGl0bGU+UmFjZVggLSBDYXJkYW5vIEFEQSBTdGFrZSBQb29sPC90aXRsZT5cbiAgICAgICAgPC9IZWFkPlxuICAgICAgICA8Q29udGFpbmVyPlxuICAgICAgICAgIDxJbnRybyAvPlxuICAgICAgICAgIDxTdGFrZSAvPlxuICAgICAgICAgIDxzZWN0aW9uPlxuICAgICAgICAgICAgPHA+XG4gICAgICAgICAgICAgIHsgISBwb29sRGF0YS5mYWxsYmFjayA/IChcbiAgICAgICAgICAgICAgICA8c3Bhbj5Mb2FkaW5nLi4uPC9zcGFuPlxuICAgICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgIHBvb2xEYXRhLmRhdGFcbiAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICA8L3NlY3Rpb24+XG4gICAgICAgICAge2hlcm9Qb3N0ICYmIChcbiAgICAgICAgICAgIDxIZXJvUG9zdFxuICAgICAgICAgICAgICB0aXRsZT17aGVyb1Bvc3QudGl0bGV9XG4gICAgICAgICAgICAgIGNvdmVySW1hZ2U9e2hlcm9Qb3N0LmNvdmVySW1hZ2V9XG4gICAgICAgICAgICAgIGRhdGU9e2hlcm9Qb3N0LmRhdGV9XG4gICAgICAgICAgICAgIGF1dGhvcj17aGVyb1Bvc3QuYXV0aG9yfVxuICAgICAgICAgICAgICBzbHVnPXtoZXJvUG9zdC5zbHVnfVxuICAgICAgICAgICAgICBleGNlcnB0PXtoZXJvUG9zdC5leGNlcnB0fVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICApfVxuICAgICAgICAgIHttb3JlUG9zdHMubGVuZ3RoID4gMCAmJiA8TW9yZVN0b3JpZXMgcG9zdHM9e21vcmVQb3N0c30gLz59XG4gICAgICAgIDwvQ29udGFpbmVyPlxuICAgICAgPC9MYXlvdXQ+XG4gICAgPC8+XG4gIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgSW5kZXhcblxuZXhwb3J0IGNvbnN0IGdldFN0YXRpY1Byb3BzID0gYXN5bmMgKCkgPT4ge1xuICBjb25zdCBhbGxQb3N0cyA9IGdldFBvc3RzKFtcbiAgICAndGl0bGUnLFxuICAgICdkYXRlJyxcbiAgICAnc2x1ZycsXG4gICAgJ2F1dGhvcicsXG4gICAgJ2NvdmVySW1hZ2UnLFxuICAgICdleGNlcnB0JyxcbiAgICAnaGVybycsXG4gIF0pXG5cbiAgcmV0dXJuIHtcbiAgICBwcm9wczogeyBhbGxQb3N0cyB9LFxuICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRQb29sRGF0YSgpIHtcbiAgY29uc3QgdXJsID0gXCJodHRwczovL2pzLmFkYXBvb2xzLm9yZy9wb29scy9kZmFjYjQzMTMxNzZiNzAwZThjZTBiYTg4NzMyYTVkNzU4Mzc0NmNjZmFmNTgyYmQxMjA5NWZkZS9zdW1tYXJ5Lmpzb25cIlxuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKFwiaHR0cHM6Ly9qc29ucGxhY2Vob2xkZXIudHlwaWNvZGUuY29tL3VzZXJzXCIpXG4gICAgLnRoZW4ocmVzID0+IChyZXMub2sgPyByZXMgOiBQcm9taXNlLnJlamVjdChyZXMpKSlcbiAgICAudGhlbihyZXMgPT4gcmVzLmpzb24oKSlcblxuICByZXR1cm4ge1xuICAgIHJlc3BvbnNlXG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/index.tsx\n");

/***/ })

})